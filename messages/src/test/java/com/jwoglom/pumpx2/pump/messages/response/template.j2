package com.jwoglom.pumpx2.pump.messages.response.{{cat}};

import static com.jwoglom.pumpx2.pump.messages.MessageTester.assertHexEquals;
{% if cat == 'control' %}import static com.jwoglom.pumpx2.pump.messages.MessageTester.initPumpState;
import com.jwoglom.pumpx2.pump.messages.PacketArrayList;
{% endif %}
import com.jwoglom.pumpx2.pump.messages.MessageTester;
import com.jwoglom.pumpx2.pump.messages.bluetooth.CharacteristicUUID;

import org.apache.commons.codec.DecoderException;
import org.junit.Test;

public class {{responseName}}Test {
    @Test
    public void test{{responseName}}() throws DecoderException { {% if cat == 'control' %}
        initPumpState(PacketArrayList.IGNORE_INVALID_HMAC, 0L);
        {% endif %}
        {{responseName}} expected = new {{responseName}}(
            // {% for arg in responseArgs %}{{ arg.type }} {{ arg.name }}{{ ", " if not loop.last else "" }}{% endfor %}
        );

        {{responseName}} parsedRes = ({{responseName}}) MessageTester.test(
                "xxxx",
                3,
                1,
                CharacteristicUUID.{{catUuid}}_CHARACTERISTICS,
                expected
        );

        assertHexEquals(expected.getCargo(), parsedRes.getCargo());
    }
}
